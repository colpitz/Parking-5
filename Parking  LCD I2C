
#include <Servo.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

const int parking_1 = 2;
const int parking_2 = 3;
const int parking_3 = 4;
const int parking_4 = A0;
const int parking_5 = A1;
const int puls_1 = 7;
const int puls_2 = 8;
const int sens_in_1 = 9;
const int sens_in_2 = 10;
const int sens_out_1 = 11;
const int sens_out_2 = 12;
const int pinservo1 = 5;
const int pinservo2 = 6;


int varking_1 = HIGH;
int varking_2 = HIGH;
int varking_3 = HIGH;
int varking_4 = HIGH;
int varking_5 = HIGH;
int varpuls_1 = HIGH;
int varpuls_2 = HIGH;
int varsens_in_1 = HIGH;
int varsens_in_2 = HIGH;
int varsens_out_1 = HIGH;
int varsens_out_2 = HIGH;

int varpos1 = 0; // Variable para saber la posicion de la Barrera 1
int varpos2 = 0; // Variable para saber la posicion de la Barrera 2
int parkingfree = 0;
int parkingtaken = 0;
int parkingtotal = 5;


Servo servo1;
Servo servo2;


int enviado; //Aqui enviamos el numero completo
int num; //Numero del servo
int posicion;//Posicion del servo

LiquidCrystal_I2C lcd(0x26, 16, 2); // set the LCD address to 0x27 for a 16 chars and 2 line display

void setup() {

  pinMode(parking_1, INPUT_PULLUP);
  pinMode(parking_2, INPUT_PULLUP);
  pinMode(parking_3, INPUT_PULLUP);
  pinMode(parking_4, INPUT_PULLUP);
  pinMode(parking_5, INPUT_PULLUP);
  pinMode(puls_1, INPUT_PULLUP);
  pinMode(puls_2, INPUT_PULLUP);
  pinMode(sens_in_1, INPUT_PULLUP);
  pinMode(sens_in_2, INPUT_PULLUP);
  pinMode(sens_out_1, INPUT_PULLUP);
  pinMode(sens_out_2, INPUT_PULLUP);

  lcd.init();
  lcd.backlight();

  lcd.setCursor(4, 0);
  lcd.print("Parking");
  lcd.setCursor(2, 3);
  lcd.print("Santa Lucia");

  delay(7000);
  lcd.clear();



  servo1.attach(pinservo1);
  servo2.attach(pinservo2);

  servo1.write(pinservo1);
  servo2.write(pinservo2);


  Serial.begin(9600);
}

void loop() {

  parkingfree = 0;
  parkingtaken = 0;
  
  varking_1 = digitalRead(parking_1);
  varking_2 = digitalRead(parking_2);
  varking_3 = digitalRead(parking_3);
  varking_4 = digitalRead(parking_4);
  varking_5 = digitalRead(parking_5);
  varpuls_1 = digitalRead(puls_1);
  varpuls_2 = digitalRead(puls_2);
  varsens_in_1 = digitalRead(sens_in_1);
  varsens_in_2 = digitalRead(sens_in_2);
  varsens_out_1 = digitalRead(sens_out_1);
  varsens_out_2 = digitalRead(sens_out_2);

  if (varpuls_1 == LOW || varsens_in_1 == LOW) {

    servo2.detach();
    servo1.attach(5);
    servo1.write(90);
    
    varpos1 = 1;
  }

  if (varsens_in_2 == LOW || varpos1 == 1) {
    
    servo2.detach();
    servo1.attach(5);
    servo1.write(0);
    
    varpos1 = 0;
  }

  if (varpuls_2 == LOW || varsens_out_1 == LOW) {

    servo1.detach();
    servo2.attach(6);
    servo2.write(0);
    varpos2 = 1;
  }

  if (varsens_out_2 == LOW || varpos2 == 1) {
    
    servo1.detach();
    servo2.attach(6);
    servo2.write(90);
    
    varpos2 = 0;
  }
  if (varking_1 == HIGH) {
    parkingfree = parkingfree + 1;
  }
  if (varking_2 == HIGH) {
    parkingfree = parkingfree + 1;
  }
  if (varking_3 == HIGH ) {
    parkingfree = parkingfree + 1;
  }

  if (varking_4 == HIGH ) {
    parkingfree = parkingfree + 1;
  }
  if (varking_5 == HIGH ) {
    parkingfree = parkingfree + 1;
  }
  lcd.setCursor(4, 0);
  lcd.print("Free :");
  lcd.setCursor(10, 0);
  lcd.print(parkingfree);

  parkingtaken = parkingtotal - parkingfree;
  lcd.setCursor(4, 3);
  lcd.print("Taken:");

  lcd.print(parkingtaken);

  Serial.println("++++++");
  Serial.println(varking_1);
  Serial.println(varking_2);
  Serial.println(varking_3);
  Serial.println(varking_4);
  Serial.println(varking_5);
  Serial.println(varpuls_1);
  Serial.println(varpuls_2);
  Serial.println(varsens_in_1);
  Serial.println(varsens_in_2);
  Serial.println(varsens_out_1);
  Serial.println(varsens_out_2);
  Serial.println("----------");
  delay(2000);
}
